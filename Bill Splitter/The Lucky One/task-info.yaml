type: edu
files:
- name: billsplitter.py
  visible: true
  text: |
    # write your code here
  learner_created: false
- name: tests.py
  visible: false
  text: |
    from hstest.stage_test import *
    from hstest.test_case import TestCase
    import ast, math

    END_RESULT = "No one is going to be lucky"


    class BillSplitterTest(StageTest):
        def generate(self) -> List[TestCase]:
            return [TestCase(stdin=["5", "Marc", "Jem", "Monica", "Anna", "Sam", "100", "Yes"],
                             attach=["5", "100", "Yes", ["Marc", "Jem", "Monica", "Anna", "Sam"]]),
                    TestCase(stdin=["0", "100", "No"], attach=["0", "100", "No"]),
                    TestCase(stdin=["-1", "-5", "No"], attach=["0", "-5", "No"])
                    ]

        def check(self, reply: str, attach: Any) -> CheckResult:
            strings = [s for s in reply.split('\n') if s != '']
            lucky_string = strings[4].split(" ")
            if (len(strings) != 5):
                return CheckResult.wrong(
                    "Your code is not printing the expected number of lines in the output, please check the examples.")
            elif (attach[2] == "Yes"):
                name = lucky_string[0]
                if (name not in attach[3]):
                    return CheckResult.wrong(
                        "The expected output is a random name from the dictionary keys, but we got something else.")
            elif (attach[2] == "No"):
                if strings[4] != END_RESULT:
                    return CheckResult.wrong("The output should be: No one is going to be lucky.")
            return CheckResult.correct()


    if __name__ == '__main__':
        BillSplitterTest().run_tests()
  learner_created: false
feedback_link: https://hyperskill.org/projects/175/stages/903/implement#comment
status: Solved
feedback:
  message: Congratulations!
  time: Sun, 18 Apr 2021 12:51:00 UTC
record: 3
